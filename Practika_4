/* В спортзал ежедневно приходит какое-то количество посетителей.
Необходимо предложить пользователю ввести такие данные: сколько
человек посетило спортзал за день, ввести возраст каждого
посетителя и в итоге показать возраст самого старшего и самого
молодого из них, а так же посчитать средний возраст посетителей. */
#include <iostream>
using namespace std;
 
int main() {
int n, i, j, sum=0, x=0;
cin >> n;
int A[n];
for (i=0; i<n; i++){
   cin >> A[i];
   sum+=A[i];
}
for (i=0; i<n-1-i; i++){
	for (j=0; j<n; j++){
		if (A[j]>A[j+1]){
			x=A[j];
			A[j]=A[j+1];
			A[j+1]=x;
		}
	}
}
 cout << A[n-1]<< endl << A[0] << endl << sum/n;
 
	return 0;
}

/* 2. На складе имеется определённое количество ящиков с яблоками (в
нашем примере 15). Когда подъезжает машина для погрузки,
попросить пользователя ввести, сколько ящиков загрузить в первую
машину, во вторую и так далее, пока не закончатся ящики с
яблоками. Предусмотреть тот случай, когда пользователь введёт
количество ящиков больше, чем есть на складе. */
#include <iostream>
using namespace std;
 
int main() {
	int n, a;
	cout << "введите количество ящиков с яблоками\n";
	cin >> n;
	while (n!=0){
		cout << "введите количество ящиков для загрузки\n";
		cin >> a;
		if (a>n){
		   cout << "нет такого количества ящиков";	
	       break;
		}
		n-=a;
			cout << "ящики успешно загружены\n";
	}
	return 0;
}


/* 3. Необходимо суммировать все нечётные целые числа в диапазоне,
который введёт пользователь с клавиатуры. */
#include <iostream>
using namespace std;
 
int main() {
	int a, b, i, sum=0;
	cin >> a >> b;
	if (a%2!=1)
	   a++;
	   i=a;
	while (i<=b){
	   sum+=i;
	   i+=2;
	}
	cout << sum;
	return 0;}

/* 4. Нарисовать равнобедренный треугольник из символов ^. Высоту
выбирает пользователь. Например: высота = 5, на экране */
#include <iostream>
using namespace std;
 
int main() {
	int a, b, i, sum=0;
	cin >> a >> b;
	if (a%2!=1)
	   a++;
	   i=a;
	while (i<=b){
	   sum+=i;
	   i+=2;
	}
	cout << sum;
	return 0;}

/* 5. С клавиатуры вводится натуральное число. Найти его наибольшую
цифру. Например, введено число 764580. Наибольшая цифра в нем 8. */
#include <iostream>
using namespace std;
 
int main() {
	int A, x, b;
	cin >> A;
    x=A%10;
while (A>0){
	A/=10;
	b=A%10;
    if (x<b) 
       x=b;
}
cout << x;
	return 0;
}


/* 6. Проверить корректность работы генератора псевдослучайных чисел
языка программирования с помощью оценки вероятности выпадения
четных чисел на выборке не меньше 1000 случайных чисел. */
#include <iostream>
using namespace std;
 
int main() {
	float percent_of_even_numbers=0;
	int random_number;
 
	for(int i=0; i<1000; i++){
	   random_number=rand();
	   if ((random_number%2)==0)
	      percent_of_even_numbers++;
	}
	percent_of_even_numbers/=10;
	cout << percent_of_even_numbers;
	return 0;
}

      
/* 7. Напишите программу, доказывающую или проверяющую, что для
множества натуральных чисел выполняется равенство:
1+2+...+n = n(n+1)/2, где n - любое натуральное число.  */

#include <iostream>
using namespace std;

int main() {
    int n, sum1=0, sum2;
    cin >> n;
    
    for( int i=1; i<(n+1); i++)
       sum1+=i;
    sum2=n*(n+1)/2;
    cout << sum1 << " = " << sum2;
	return 0;
}


/* 8. В программе генерируется случайное целое число от 0 до 100.
Пользователь должен его отгадать не более чем за 10 попыток. После
каждой неудачной попытки должно сообщаться больше или меньше
введенное пользователем число, чем то, что загадано. Если за 10
попыток число не отгадано, то вывести загаданное число. */
#include <iostream>
 
using namespace std;
 
int main() {
  int true_number, input_number;
  true_number=rand()%101;
 
  for(int i=0; i<10; i++){
  	cin >> input_number;
  	if (input_number == true_number)
  		break;
  	if (input_number > true_number)
  		cout << "Загаданное число меньше"<< endl;
  	else if (input_number < true_number)
  	    cout << "Загаданное число больше" << endl;
  }
  if (input_number == true_number)
     cout << "Правильно";
  else
     cout << input_number;
	return 0;
}


/* 10.Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры (4, 6
и 0) и 2 нечетные (3 и 5). */
#include <iostream>
using namespace std;
 
int main() {
   int a, odd=0, even=0;
   cin >> a;
   while (a>0){
      if (a%2 > 0)
         odd++;
      else 
         even++;
      a/=10;
}
cout << even << endl << odd;
return 0;
}


/* 11.Вывести на экран столько элементов ряда Фибоначчи, сколько указал
пользователь. Например, если на ввод поступило число 6, то вывод
должен содержать шесть первых чисел ряда Фибоначчи: 1 2 3 5 8 13. */
#include <iostream>
using namespace std;
 
int main() {
	int n, f1=1, f2=1, output;
	cin >> n;
	for(int i=0; i<n; i++){
		output=f2;
		f2+=f1;
		f1=f2-f1;
		cout << output <<endl;
	}
	return 0;
}

/* 12.Вывести на экран ряд натуральных чисел от минимума до максимума
с шагом. Например, если минимум 10, максимум 35, шаг 5, то вывод
должен быть таким: 10 15 20 25 30 35. Минимум, максимум и шаг
указываются пользователем (считываются с клавиатуры). */
#include <iostream>
using namespace std;
 
int main() {
   int step, min, max;
   cin >> step >> min >> max;
   while (min + step <= max){
      cout << min << " ";
      min+=step;
   }
   return 0;
}

/* 13.Сформировать из введенного числа обратное по порядку входящих в
него цифр и вывести на экран. Например, если введено число 3486, то
надо вывести число 6843. */
#include <iostream>
using namespace std;
 
int main() {
   int a, a_reversed=0;
   cin >> a;
   while (a>0){
   a_reverced=a_reverced*10+a%10;
   a/=10;
   }
   cout << a_reversed;
   return 0;
}


/* 14.Найти сумму и произведение цифр, введенного натурального числа.
Например, если введено число 325, то сумма его цифр равна 10
(3+2+5), а произведение 30 (3*2*5). */
#include <iostream>
using namespace std;
 
int main() {
int a, summ=0, product=1;
cin >> a;
while (a>0){
summ+=a%10;
product*=a%10;
a/=10;
}
cout << summ << endl << product;
return 0;
}

/* 15.Написать программу, которая будет складывать, вычитать, умножать
или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а
должна запрашивать новые данные для вычислений. Завершение
программы должно выполняться при вводе символа '0' в качестве
знака операции. Если пользователь вводит неверный знак (не '0', '+', '-
', '*', '/'), то программа должна сообщать ему об ошибке и снова
запрашивать знак операции. Также сообщать пользователю о
невозможности деления на ноль, если он ввел 0 в качестве делителя.  */
